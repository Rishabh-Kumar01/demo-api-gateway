# Stage 1: Build stage
FROM node:20-alpine AS builder

WORKDIR /usr/src/app

# Copy package.json and package-lock.json (or npm-shrinkwrap.json)
COPY package*.json ./

# Install production dependencies (or all dependencies if needed for staging tools)
RUN npm ci --only=production
# For staging, you might consider `RUN npm ci` if you need devDependencies for some reason

# Copy the rest of the application source code
COPY . .

# Add any staging-specific build steps here if needed
# For example, installing specific debugging tools or using different build flags

# Stage 2: Production-like stage for staging
FROM node:20-alpine

WORKDIR /usr/src/app

# Copy dependencies from builder stage
COPY --from=builder /usr/src/app/node_modules ./node_modules

# Copy application code from builder stage
COPY --from=builder /usr/src/app/src ./src

# Set environment variables
ENV NODE_ENV=staging

# Expose the port the app runs on
EXPOSE 3000

# Add a non-root user for security
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

# Command to run the application
CMD ["node", "src/server.js"]