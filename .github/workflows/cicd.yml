name: CI/CD Docker Image to Docker Hub

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Runs on pushes to the main branch
  pull_request:
    branches: [ "main" ] # Runs on pull requests targeting the main branch (for build testing)

jobs:
  build_and_push_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest # Specifies the runner environment

    steps:
      # 1. Checkout Code
      # This step checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      # Buildx is a Docker CLI plugin that extends the docker build command with the full support
      # of the features provided by Moby BuildKit builder toolkit. It allows for building multi-platform images.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Login to Docker Hub
      # This step logs into Docker Hub using the secrets you configured.
      # It's essential for pushing images to your Docker Hub repository.
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Build and Push Docker Image
      # This step builds your Docker image using the Dockerfile in your repository
      # and pushes it to Docker Hub.
      # - `context: .` tells Docker to use the current directory as the build context.
      # - `file: ./Dockerfile` specifies the path to your Dockerfile.
      # - `push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}`
      #   This condition ensures the image is only pushed if the event is a 'push'
      #   AND the push is to the 'main' branch. For pull requests, it will build but not push.
      # - `tags:` defines how the image will be tagged.
      #   - `yourusername/api-gateway:latest`: A common tag for the most recent version.
      #     Replace 'yourusername' with your actual Docker Hub username.
      #   - `yourusername/api-gateway:${{ github.sha }}`: Tags the image with the Git commit SHA,
      #     providing a unique identifier for each build.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ github.sha }}
          # Optional: Add build arguments if your Dockerfile needs them
          # build-args: |
          #   ARG_NAME=value